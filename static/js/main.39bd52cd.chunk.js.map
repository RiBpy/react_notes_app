{"version":3,"sources":["Alert.js","List.js","App.js","index.js"],"names":["Alert","type","msg","removeAlert","useEffect","timeOut","setTimeout","clearTimeout","className","List","items","deleteHandler","editHandler","map","item","id","title","key","onClick","App","useState","OldList","localStorage","getItem","JSON","parse","getLocalStorage","list","setList","name","setName","isEditing","setIsEditing","editID","setEditID","show","alert","setAlert","showAlert","setItem","stringify","src","alt","placeholder","value","onChange","e","target","preventDefault","newItem","Date","getTime","toString","length","filter","specificItem","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39bd52cd.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nconst Alert = ({type,msg,removeAlert}) => {\r\n  useEffect(()=>{\r\n     let timeOut=setTimeout(removeAlert,4000) //only setTimeout(removeAlert,3000) will work but to clear cache we can write this way\r\n     return()=> clearTimeout(timeOut)\r\n  })\r\n  return <p className={`alert alert-${type}`}>{msg}</p>\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport { FaEdit, FaTrash } from 'react-icons/fa'\r\nconst List = ({items,deleteHandler,editHandler}) => {\r\n\r\n  return( <div className='grocery-list'>\r\n         {items.map((item)=>{\r\n          const {id,title}=item\r\n            return (\r\n              <article key={id} className=\"grocery-item\">\r\n                  <p className=\"title\">{title}</p>\r\n                  <div className=\"btn-container\">\r\n                    <button type=\"button\" className=\"edit-btn\" onClick={()=>editHandler(id)}><FaEdit/></button>\r\n                    <button type=\"button\" className=\"delete-btn\" onClick={()=>deleteHandler(id)}><FaTrash/></button>\r\n                  </div>\r\n              </article>\r\n            )\r\n         })}\r\n       </div>\r\n  )\r\n}\r\n\r\nexport default List\r\n","import React, { useEffect, useState } from 'react';\r\nimport Alert from './Alert';\r\nimport List from './List';\r\nconst getLocalStorage = () => {\r\n  let OldList = localStorage.getItem('list');\r\n  if (OldList) {\r\n    return (OldList = JSON.parse(OldList));  //if any item remains in storage it will be passed through getLocalStorage function\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\nfunction App() {\r\n  const[list,setList]=useState(getLocalStorage());\r\n  const[name,setName]=useState(\"\");\r\n  const[isEditing,setIsEditing]=useState(false)\r\n  const[editID,setEditID]=useState(null)\r\n  const[alert,setAlert]=useState({\r\n    show:false,\r\n    msg:\"\",\r\n    type:\"\"\r\n  })\r\n  const submitHandler=(e)=>{\r\n    e.preventDefault()\r\n    if(!name){\r\n      showAlert(true,\"Title can not be empty\",\"danger\")\r\n    }else if(name && isEditing){\r\n      setList(\r\n        list.map(item=>{\r\n        if(item.id===editID){\r\n          return{...item,title:name}//...item (old letter) +title:name (added letter) \r\n        }\r\n        return item\r\n      })\r\n      )\r\n      setIsEditing(false);\r\n      setName(\"\");\r\n      setEditID(null)\r\n      showAlert(true,\"Editing done\",\"success\")\r\n    }else{\r\n      let newItem={\r\n        id:new Date().getTime().toString(),  //to generate unique id for every item\r\n        title:name\r\n      }\r\n      showAlert(true,\"Item added\",\"success\")\r\n      setList([...list,newItem])  //submitted item and remails items will concat \r\n      setName(\"\");//input field will be empty\r\n    }\r\n  }\r\n  const editHandler=(id)=>{\r\n   let specificItem=list.find(item=>item.id===id)\r\n    setIsEditing(true)\r\n    setEditID(id)  //pick the item to edit\r\n    setName(specificItem.title)  //show title in input field\r\n  }\r\n  const deleteHandler=(id)=>{\r\n    showAlert(true,\"Item deleted\",\"danger\")\r\n    setList(list.filter((item)=>item.id!==id))\r\n  }\r\n  const emptyList=()=>{\r\n    showAlert(true,\"Empty-list\",\"danger\")\r\n    setList([])\r\n  }\r\n  const showAlert=(show=false,msg=\"\",type=\"\")=>{\r\n    setAlert({show,msg,type}) //es-6 ,,it means show:show ,type:type,msg:msg as we are passing parameters with same name as the object has we can write this way.\r\n  }\r\n  useEffect(()=>{\r\n    localStorage.setItem(\"list\",JSON.stringify(list))\r\n  })\r\n  return <section className=\"section-center\">\r\n        <div className=\"myLogo\">\r\n          <img className=\"logo\"src=\"logo.png\" alt=\"img\" />\r\n        </div>\r\n        <form className='grocery-form'>\r\n          {alert.show && <Alert  {...alert} removeAlert={showAlert}/>}\r\n          <h3>Notes Taking App</h3>\r\n          <div className=\"form-control\">\r\n            <input type=\"text\" className='grocery'\r\n            placeholder='e.g Beef' value={name} onChange={(e)=>setName(e.target.value)}/>\r\n            <button className='submit-btn' type=\"submit\" onClick={submitHandler}>{isEditing?\"Edit\":\"Submit\"}</button>\r\n          </div>\r\n        </form>\r\n      {list.length>0 &&(\r\n        <div className=\"grocery-container\">\r\n            <List items={list} deleteHandler={deleteHandler} editHandler={editHandler}/>\r\n            <button className=\"clear-btn\" onClick={emptyList}>Clear All</button>\r\n        </div>\r\n      )}\r\n      \r\n  </section>\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}